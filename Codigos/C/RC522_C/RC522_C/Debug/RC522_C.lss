
RC522_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000db4  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005b  00000000  00000000  00000db4  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000100  00000000  00000000  00000e0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000026cf  00000000  00000000  00000f0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000a77  00000000  00000000  000035de  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000ade  00000000  00000000  00004055  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000234  00000000  00000000  00004b34  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000002b5  00000000  00000000  00004d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000009b2  00000000  00000000  0000501d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c0  00000000  00000000  000059cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000d5c  00000d5c  00000db0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005a90  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .progmemx.data 0000000d  0000029f  0000029f  000002f3  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 14 .text.main    0000009e  00000908  00000908  0000095c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.mfrc522_resetPinInit 00000032  00000c08  00000c08  00000c5c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.mfrc522_write 0000002a  00000c66  00000c66  00000cba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.mfrc522_read 00000026  00000c90  00000c90  00000ce4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.mfrc522_setBitMask 0000001c  00000cfa  00000cfa  00000d4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.mfrc522_clearBitMask 0000001e  00000cdc  00000cdc  00000d30  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .progmemx.data 0000021f  00000080  00000080  000000d4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 21 .text.mfrc522_reset 00000026  00000cb6  00000cb6  00000d0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.mfrc522_init 0000005c  00000a1e  00000a1e  00000a72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.mfrc522_standard 0000014e  000006fe  000006fe  00000752  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.spi_init 00000016  00000d16  00000d16  00000d6a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.spi_transfer 0000000c  00000d50  00000d50  00000da4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.uart_init 00000016  00000d2c  00000d2c  00000d80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.uart_send 0000000e  00000d42  00000d42  00000d96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.uart_print 0000002c  00000c3a  00000c3a  00000c8e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .progmemx.data 0000000a  000002ac  000002ac  00000300  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 30 .text.uart_print_hex 00000058  00000a7a  00000a7a  00000ace  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.uart_print_hex_array 0000004c  00000ad2  00000ad2  00000b26  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.avrlibc 00000046  00000b1e  00000b1e  00000b72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.avrlibc 00000448  000002b6  000002b6  0000030a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.avrlibc 00000036  00000b9c  00000b9c  00000bf0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.avrlibc 00000078  000009a6  000009a6  000009fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.avrlibc 000000bc  0000084c  0000084c  000008a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.libgcc.prologue 00000038  00000b64  00000b64  00000bb8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.libgcc.prologue 00000036  00000bd2  00000bd2  00000c26  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
   8:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
   c:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  10:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  14:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  18:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  1c:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  20:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  24:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  28:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  2c:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  30:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  34:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  38:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  3c:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  40:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  44:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  48:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  4c:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  50:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  54:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  58:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  5c:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  60:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>
  64:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 84 04 	call	0x908	; 0x908 <main>
  78:	0c 94 3e 00 	jmp	0x7c	; 0x7c <_exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

00000d5c <__bad_interrupt>:
 d5c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000908 <main>:

#define BAUD 9600
#define MY_UBRR F_CPU/16/BAUD-1

// ==== MAIN ====
int main(void) {
 908:	cf 93       	push	r28
 90a:	df 93       	push	r29
 90c:	cd b7       	in	r28, 0x3d	; 61
 90e:	de b7       	in	r29, 0x3e	; 62
 910:	2a 97       	sbiw	r28, 0x0a	; 10
 912:	0f b6       	in	r0, 0x3f	; 63
 914:	f8 94       	cli
 916:	de bf       	out	0x3e, r29	; 62
 918:	0f be       	out	0x3f, r0	; 63
 91a:	cd bf       	out	0x3d, r28	; 61
	uart_init(MY_UBRR);
 91c:	87 e6       	ldi	r24, 0x67	; 103
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	0e 94 96 06 	call	0xd2c	; 0xd2c <uart_init>
	spi_init();
 924:	0e 94 8b 06 	call	0xd16	; 0xd16 <spi_init>
	mfrc522_resetPinInit();
 928:	0e 94 04 06 	call	0xc08	; 0xc08 <mfrc522_resetPinInit>
	mfrc522_init();
 92c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <mfrc522_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 930:	2f ef       	ldi	r18, 0xFF	; 255
 932:	81 ee       	ldi	r24, 0xE1	; 225
 934:	94 e0       	ldi	r25, 0x04	; 4
 936:	21 50       	subi	r18, 0x01	; 1
 938:	80 40       	sbci	r24, 0x00	; 0
 93a:	90 40       	sbci	r25, 0x00	; 0
 93c:	e1 f7       	brne	.-8      	; 0x936 <main+0x2e>
 93e:	00 c0       	rjmp	.+0      	; 0x940 <main+0x38>
 940:	00 00       	nop
	_delay_ms(100);

	char card_uid[10] = {0};
 942:	fe 01       	movw	r30, r28
 944:	31 96       	adiw	r30, 0x01	; 1
 946:	8a e0       	ldi	r24, 0x0A	; 10
 948:	df 01       	movw	r26, r30
 94a:	1d 92       	st	X+, r1
 94c:	8a 95       	dec	r24
 94e:	e9 f7       	brne	.-6      	; 0x94a <main+0x42>

	//mfrc522_debug_REQA(); //Funcion debug
	//_delay_ms(500);
		
	while (1) {
		mfrc522_standard(card_uid);
 950:	ce 01       	movw	r24, r28
 952:	01 96       	adiw	r24, 0x01	; 1
 954:	0e 94 7f 03 	call	0x6fe	; 0x6fe <mfrc522_standard>
 958:	bf ef       	ldi	r27, 0xFF	; 255
 95a:	29 e6       	ldi	r18, 0x69	; 105
 95c:	88 e1       	ldi	r24, 0x18	; 24
 95e:	b1 50       	subi	r27, 0x01	; 1
 960:	20 40       	sbci	r18, 0x00	; 0
 962:	80 40       	sbci	r24, 0x00	; 0
 964:	e1 f7       	brne	.-8      	; 0x95e <main+0x56>
 966:	00 c0       	rjmp	.+0      	; 0x968 <main+0x60>
 968:	00 00       	nop
		_delay_ms(500);
		uart_print("Recibido: ");	
 96a:	6f e9       	ldi	r22, 0x9F	; 159
 96c:	72 e0       	ldi	r23, 0x02	; 2
 96e:	80 e0       	ldi	r24, 0x00	; 0
 970:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
		if(card_uid[0] != 0)
 974:	89 81       	ldd	r24, Y+1	; 0x01
 976:	88 23       	and	r24, r24
 978:	39 f0       	breq	.+14     	; 0x988 <main+0x80>
			uart_print_hex_array(card_uid, 5);
 97a:	be 01       	movw	r22, r28
 97c:	6f 5f       	subi	r22, 0xFF	; 255
 97e:	7f 4f       	sbci	r23, 0xFF	; 255
 980:	80 e8       	ldi	r24, 0x80	; 128
 982:	45 e0       	ldi	r20, 0x05	; 5
 984:	0e 94 69 05 	call	0xad2	; 0xad2 <uart_print_hex_array>
		uart_print("\n");	
 988:	6a ea       	ldi	r22, 0xAA	; 170
 98a:	72 e0       	ldi	r23, 0x02	; 2
 98c:	80 e0       	ldi	r24, 0x00	; 0
 98e:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 992:	9f ef       	ldi	r25, 0xFF	; 255
 994:	a9 e6       	ldi	r26, 0x69	; 105
 996:	b8 e1       	ldi	r27, 0x18	; 24
 998:	91 50       	subi	r25, 0x01	; 1
 99a:	a0 40       	sbci	r26, 0x00	; 0
 99c:	b0 40       	sbci	r27, 0x00	; 0
 99e:	e1 f7       	brne	.-8      	; 0x998 <main+0x90>
 9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <main+0x9a>
 9a2:	00 00       	nop
 9a4:	d5 cf       	rjmp	.-86     	; 0x950 <main+0x48>

Disassembly of section .text.mfrc522_resetPinInit:

00000c08 <mfrc522_resetPinInit>:
void mfrc522_printRegister(const char* name, uint8_t reg) {
	uart_print(name);
	uart_print(": ");
	uart_print_hex(mfrc522_read(reg));
	uart_print("\r\n");
}
 c08:	84 b1       	in	r24, 0x04	; 4
 c0a:	82 60       	ori	r24, 0x02	; 2
 c0c:	84 b9       	out	0x04, r24	; 4
 c0e:	85 b1       	in	r24, 0x05	; 5
 c10:	8d 7f       	andi	r24, 0xFD	; 253
 c12:	85 b9       	out	0x05, r24	; 5
 c14:	8f e3       	ldi	r24, 0x3F	; 63
 c16:	9c e9       	ldi	r25, 0x9C	; 156
 c18:	01 97       	sbiw	r24, 0x01	; 1
 c1a:	f1 f7       	brne	.-4      	; 0xc18 <mfrc522_resetPinInit+0x10>
 c1c:	00 c0       	rjmp	.+0      	; 0xc1e <mfrc522_resetPinInit+0x16>
 c1e:	00 00       	nop
 c20:	85 b1       	in	r24, 0x05	; 5
 c22:	82 60       	ori	r24, 0x02	; 2
 c24:	85 b9       	out	0x05, r24	; 5
 c26:	9f ef       	ldi	r25, 0xFF	; 255
 c28:	20 e7       	ldi	r18, 0x70	; 112
 c2a:	82 e0       	ldi	r24, 0x02	; 2
 c2c:	91 50       	subi	r25, 0x01	; 1
 c2e:	20 40       	sbci	r18, 0x00	; 0
 c30:	80 40       	sbci	r24, 0x00	; 0
 c32:	e1 f7       	brne	.-8      	; 0xc2c <mfrc522_resetPinInit+0x24>
 c34:	00 c0       	rjmp	.+0      	; 0xc36 <mfrc522_resetPinInit+0x2e>
 c36:	00 00       	nop
 c38:	08 95       	ret

Disassembly of section .text.mfrc522_write:

00000c66 <mfrc522_write>:
 c66:	cf 93       	push	r28
 c68:	c6 2f       	mov	r28, r22
 c6a:	95 b1       	in	r25, 0x05	; 5
 c6c:	9b 7f       	andi	r25, 0xFB	; 251
 c6e:	95 b9       	out	0x05, r25	; 5
 c70:	90 e0       	ldi	r25, 0x00	; 0
 c72:	88 0f       	add	r24, r24
 c74:	99 1f       	adc	r25, r25
 c76:	8e 77       	andi	r24, 0x7E	; 126
 c78:	99 27       	eor	r25, r25
 c7a:	0e 94 a8 06 	call	0xd50	; 0xd50 <spi_transfer>
 c7e:	8c 2f       	mov	r24, r28
 c80:	90 e0       	ldi	r25, 0x00	; 0
 c82:	0e 94 a8 06 	call	0xd50	; 0xd50 <spi_transfer>
 c86:	85 b1       	in	r24, 0x05	; 5
 c88:	84 60       	ori	r24, 0x04	; 4
 c8a:	85 b9       	out	0x05, r24	; 5
 c8c:	cf 91       	pop	r28
 c8e:	08 95       	ret

Disassembly of section .text.mfrc522_read:

00000c90 <mfrc522_read>:
 c90:	95 b1       	in	r25, 0x05	; 5
 c92:	9b 7f       	andi	r25, 0xFB	; 251
 c94:	95 b9       	out	0x05, r25	; 5
 c96:	90 e0       	ldi	r25, 0x00	; 0
 c98:	88 0f       	add	r24, r24
 c9a:	99 1f       	adc	r25, r25
 c9c:	8e 77       	andi	r24, 0x7E	; 126
 c9e:	99 27       	eor	r25, r25
 ca0:	80 68       	ori	r24, 0x80	; 128
 ca2:	0e 94 a8 06 	call	0xd50	; 0xd50 <spi_transfer>
 ca6:	80 e0       	ldi	r24, 0x00	; 0
 ca8:	90 e0       	ldi	r25, 0x00	; 0
 caa:	0e 94 a8 06 	call	0xd50	; 0xd50 <spi_transfer>
 cae:	95 b1       	in	r25, 0x05	; 5
 cb0:	94 60       	ori	r25, 0x04	; 4
 cb2:	95 b9       	out	0x05, r25	; 5
 cb4:	08 95       	ret

Disassembly of section .text.mfrc522_setBitMask:

00000cfa <mfrc522_setBitMask>:
	val = spi_transfer(0x00);
	SS_HIGH();
	return val;
}

void mfrc522_setBitMask(uint8_t reg, uint8_t mask) {
 cfa:	cf 93       	push	r28
 cfc:	df 93       	push	r29
 cfe:	d8 2f       	mov	r29, r24
 d00:	c6 2f       	mov	r28, r22
	uint8_t tmp = mfrc522_read(reg);
 d02:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
	mfrc522_write(reg, tmp | mask);
 d06:	68 2f       	mov	r22, r24
 d08:	6c 2b       	or	r22, r28
 d0a:	8d 2f       	mov	r24, r29
 d0c:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
}
 d10:	df 91       	pop	r29
 d12:	cf 91       	pop	r28
 d14:	08 95       	ret

Disassembly of section .text.mfrc522_clearBitMask:

00000cdc <mfrc522_clearBitMask>:

void mfrc522_clearBitMask(uint8_t reg, uint8_t mask) {
 cdc:	cf 93       	push	r28
 cde:	df 93       	push	r29
 ce0:	d8 2f       	mov	r29, r24
 ce2:	c6 2f       	mov	r28, r22
	uint8_t tmp = mfrc522_read(reg);
 ce4:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
	mfrc522_write(reg, tmp & (~mask));
 ce8:	c0 95       	com	r28
 cea:	6c 2f       	mov	r22, r28
 cec:	68 23       	and	r22, r24
 cee:	8d 2f       	mov	r24, r29
 cf0:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
}
 cf4:	df 91       	pop	r29
 cf6:	cf 91       	pop	r28
 cf8:	08 95       	ret

Disassembly of section .text.mfrc522_reset:

00000cb6 <mfrc522_reset>:
}


// ==== Funciones de depuracion ====
void mfrc522_reset() {
	uart_print("Soft Reset...\r\n");
 cb6:	66 e8       	ldi	r22, 0x86	; 134
 cb8:	70 e0       	ldi	r23, 0x00	; 0
 cba:	80 e0       	ldi	r24, 0x00	; 0
 cbc:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
	mfrc522_write(CommandReg, (1<<4));
 cc0:	60 e1       	ldi	r22, 0x10	; 16
 cc2:	81 e0       	ldi	r24, 0x01	; 1
 cc4:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 cc8:	2f ef       	ldi	r18, 0xFF	; 255
 cca:	80 e7       	ldi	r24, 0x70	; 112
 ccc:	92 e0       	ldi	r25, 0x02	; 2
 cce:	21 50       	subi	r18, 0x01	; 1
 cd0:	80 40       	sbci	r24, 0x00	; 0
 cd2:	90 40       	sbci	r25, 0x00	; 0
 cd4:	e1 f7       	brne	.-8      	; 0xcce <mfrc522_reset+0x18>
 cd6:	00 c0       	rjmp	.+0      	; 0xcd8 <mfrc522_reset+0x22>
 cd8:	00 00       	nop
 cda:	08 95       	ret

Disassembly of section .text.mfrc522_init:

00000a1e <mfrc522_init>:
void mfrc522_printRegister(const char* name, uint8_t reg) {
	uart_print(name);
	uart_print(": ");
	uart_print_hex(mfrc522_read(reg));
	uart_print("\r\n");
}
 a1e:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <mfrc522_reset>
 a22:	66 e9       	ldi	r22, 0x96	; 150
 a24:	70 e0       	ldi	r23, 0x00	; 0
 a26:	80 e0       	ldi	r24, 0x00	; 0
 a28:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 a2c:	6d e8       	ldi	r22, 0x8D	; 141
 a2e:	8a e2       	ldi	r24, 0x2A	; 42
 a30:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a34:	6e e3       	ldi	r22, 0x3E	; 62
 a36:	8b e2       	ldi	r24, 0x2B	; 43
 a38:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a3c:	6e e1       	ldi	r22, 0x1E	; 30
 a3e:	8d e2       	ldi	r24, 0x2D	; 45
 a40:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a44:	60 e0       	ldi	r22, 0x00	; 0
 a46:	8c e2       	ldi	r24, 0x2C	; 44
 a48:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a4c:	60 e4       	ldi	r22, 0x40	; 64
 a4e:	85 e1       	ldi	r24, 0x15	; 21
 a50:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a54:	6d e3       	ldi	r22, 0x3D	; 61
 a56:	81 e1       	ldi	r24, 0x11	; 17
 a58:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a5c:	6f e7       	ldi	r22, 0x7F	; 127
 a5e:	86 e2       	ldi	r24, 0x26	; 38
 a60:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a64:	63 e8       	ldi	r22, 0x83	; 131
 a66:	84 e1       	ldi	r24, 0x14	; 20
 a68:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 a6c:	8f e1       	ldi	r24, 0x1F	; 31
 a6e:	9e e4       	ldi	r25, 0x4E	; 78
 a70:	01 97       	sbiw	r24, 0x01	; 1
 a72:	f1 f7       	brne	.-4      	; 0xa70 <mfrc522_init+0x52>
 a74:	00 c0       	rjmp	.+0      	; 0xa76 <mfrc522_init+0x58>
 a76:	00 00       	nop
 a78:	08 95       	ret

Disassembly of section .text.mfrc522_standard:

000006fe <mfrc522_standard>:
 6fe:	0f 93       	push	r16
 700:	1f 93       	push	r17
 702:	cf 93       	push	r28
 704:	df 93       	push	r29
 706:	8c 01       	movw	r16, r24
 708:	67 e0       	ldi	r22, 0x07	; 7
 70a:	8d e0       	ldi	r24, 0x0D	; 13
 70c:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 710:	6f e7       	ldi	r22, 0x7F	; 127
 712:	84 e0       	ldi	r24, 0x04	; 4
 714:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 718:	60 e8       	ldi	r22, 0x80	; 128
 71a:	8a e0       	ldi	r24, 0x0A	; 10
 71c:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 720:	68 e4       	ldi	r22, 0x48	; 72
 722:	71 e0       	ldi	r23, 0x01	; 1
 724:	80 e0       	ldi	r24, 0x00	; 0
 726:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 72a:	c0 e0       	ldi	r28, 0x00	; 0
 72c:	05 c0       	rjmp	.+10     	; 0x738 <mfrc522_standard+0x3a>
 72e:	66 e2       	ldi	r22, 0x26	; 38
 730:	89 e0       	ldi	r24, 0x09	; 9
 732:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 736:	cf 5f       	subi	r28, 0xFF	; 255
 738:	cc 23       	and	r28, r28
 73a:	c9 f3       	breq	.-14     	; 0x72e <mfrc522_standard+0x30>
 73c:	6c e0       	ldi	r22, 0x0C	; 12
 73e:	81 e0       	ldi	r24, 0x01	; 1
 740:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 744:	60 e8       	ldi	r22, 0x80	; 128
 746:	8d e0       	ldi	r24, 0x0D	; 13
 748:	0e 94 7d 06 	call	0xcfa	; 0xcfa <mfrc522_setBitMask>
 74c:	c8 ee       	ldi	r28, 0xE8	; 232
 74e:	d3 e0       	ldi	r29, 0x03	; 3
 750:	84 e0       	ldi	r24, 0x04	; 4
 752:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
 756:	21 97       	sbiw	r28, 0x01	; 1
 758:	80 73       	andi	r24, 0x30	; 48
 75a:	11 f4       	brne	.+4      	; 0x760 <mfrc522_standard+0x62>
 75c:	20 97       	sbiw	r28, 0x00	; 0
 75e:	c1 f7       	brne	.-16     	; 0x750 <mfrc522_standard+0x52>
 760:	60 e8       	ldi	r22, 0x80	; 128
 762:	8d e0       	ldi	r24, 0x0D	; 13
 764:	0e 94 6e 06 	call	0xcdc	; 0xcdc <mfrc522_clearBitMask>
 768:	cd 2b       	or	r28, r29
 76a:	59 f4       	brne	.+22     	; 0x782 <mfrc522_standard+0x84>
 76c:	69 ed       	ldi	r22, 0xD9	; 217
 76e:	71 e0       	ldi	r23, 0x01	; 1
 770:	80 e0       	ldi	r24, 0x00	; 0
 772:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 776:	80 e1       	ldi	r24, 0x10	; 16
 778:	f8 01       	movw	r30, r16
 77a:	11 92       	st	Z+, r1
 77c:	8a 95       	dec	r24
 77e:	e9 f7       	brne	.-6      	; 0x77a <mfrc522_standard+0x7c>
 780:	60 c0       	rjmp	.+192    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 782:	8a e0       	ldi	r24, 0x0A	; 10
 784:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
 788:	d8 2f       	mov	r29, r24
 78a:	c0 e0       	ldi	r28, 0x00	; 0
 78c:	04 c0       	rjmp	.+8      	; 0x796 <mfrc522_standard+0x98>
 78e:	89 e0       	ldi	r24, 0x09	; 9
 790:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
 794:	cf 5f       	subi	r28, 0xFF	; 255
 796:	cd 17       	cp	r28, r29
 798:	d0 f3       	brcs	.-12     	; 0x78e <mfrc522_standard+0x90>
 79a:	dd 23       	and	r29, r29
 79c:	09 f4       	brne	.+2      	; 0x7a0 <mfrc522_standard+0xa2>
 79e:	51 c0       	rjmp	.+162    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 7a0:	62 e4       	ldi	r22, 0x42	; 66
 7a2:	72 e0       	ldi	r23, 0x02	; 2
 7a4:	80 e0       	ldi	r24, 0x00	; 0
 7a6:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 7aa:	60 e0       	ldi	r22, 0x00	; 0
 7ac:	8d e0       	ldi	r24, 0x0D	; 13
 7ae:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 7b2:	6f e7       	ldi	r22, 0x7F	; 127
 7b4:	84 e0       	ldi	r24, 0x04	; 4
 7b6:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 7ba:	60 e8       	ldi	r22, 0x80	; 128
 7bc:	8a e0       	ldi	r24, 0x0A	; 10
 7be:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 7c2:	63 e9       	ldi	r22, 0x93	; 147
 7c4:	89 e0       	ldi	r24, 0x09	; 9
 7c6:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 7ca:	60 e2       	ldi	r22, 0x20	; 32
 7cc:	89 e0       	ldi	r24, 0x09	; 9
 7ce:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 7d2:	6c e0       	ldi	r22, 0x0C	; 12
 7d4:	81 e0       	ldi	r24, 0x01	; 1
 7d6:	0e 94 33 06 	call	0xc66	; 0xc66 <mfrc522_write>
 7da:	60 e8       	ldi	r22, 0x80	; 128
 7dc:	8d e0       	ldi	r24, 0x0D	; 13
 7de:	0e 94 7d 06 	call	0xcfa	; 0xcfa <mfrc522_setBitMask>
 7e2:	c8 ee       	ldi	r28, 0xE8	; 232
 7e4:	d3 e0       	ldi	r29, 0x03	; 3
 7e6:	84 e0       	ldi	r24, 0x04	; 4
 7e8:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
 7ec:	21 97       	sbiw	r28, 0x01	; 1
 7ee:	80 73       	andi	r24, 0x30	; 48
 7f0:	11 f4       	brne	.+4      	; 0x7f6 <mfrc522_standard+0xf8>
 7f2:	20 97       	sbiw	r28, 0x00	; 0
 7f4:	c1 f7       	brne	.-16     	; 0x7e6 <mfrc522_standard+0xe8>
 7f6:	60 e8       	ldi	r22, 0x80	; 128
 7f8:	8d e0       	ldi	r24, 0x0D	; 13
 7fa:	0e 94 6e 06 	call	0xcdc	; 0xcdc <mfrc522_clearBitMask>
 7fe:	cd 2b       	or	r28, r29
 800:	31 f4       	brne	.+12     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 802:	6e e6       	ldi	r22, 0x6E	; 110
 804:	72 e0       	ldi	r23, 0x02	; 2
 806:	80 e0       	ldi	r24, 0x00	; 0
 808:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 80c:	1a c0       	rjmp	.+52     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 80e:	8a e0       	ldi	r24, 0x0A	; 10
 810:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
 814:	d8 2f       	mov	r29, r24
 816:	64 e9       	ldi	r22, 0x94	; 148
 818:	72 e0       	ldi	r23, 0x02	; 2
 81a:	80 e0       	ldi	r24, 0x00	; 0
 81c:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 820:	c0 e0       	ldi	r28, 0x00	; 0
 822:	08 c0       	rjmp	.+16     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 824:	89 e0       	ldi	r24, 0x09	; 9
 826:	0e 94 48 06 	call	0xc90	; 0xc90 <mfrc522_read>
 82a:	f8 01       	movw	r30, r16
 82c:	ec 0f       	add	r30, r28
 82e:	f1 1d       	adc	r31, r1
 830:	80 83       	st	Z, r24
 832:	cf 5f       	subi	r28, 0xFF	; 255
 834:	cd 17       	cp	r28, r29
 836:	b0 f3       	brcs	.-20     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 838:	63 e8       	ldi	r22, 0x83	; 131
 83a:	70 e0       	ldi	r23, 0x00	; 0
 83c:	80 e0       	ldi	r24, 0x00	; 0
 83e:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 842:	df 91       	pop	r29
 844:	cf 91       	pop	r28
 846:	1f 91       	pop	r17
 848:	0f 91       	pop	r16
 84a:	08 95       	ret

Disassembly of section .text.spi_init:

00000d16 <spi_init>:

#ifndef SPI_C
#define SPI_C

void spi_init(void) {
	DDRB |= (1<<PB2)|(1<<PB3)|(1<<PB5); // SS, MOSI, SCK salidas
 d16:	84 b1       	in	r24, 0x04	; 4
 d18:	8c 62       	ori	r24, 0x2C	; 44
 d1a:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1<<PB4); // MISO entrada
 d1c:	84 b1       	in	r24, 0x04	; 4
 d1e:	8f 7e       	andi	r24, 0xEF	; 239
 d20:	84 b9       	out	0x04, r24	; 4
	SPCR = (1<<SPE)|(1<<MSTR);
 d22:	80 e5       	ldi	r24, 0x50	; 80
 d24:	8c bd       	out	0x2c, r24	; 44
	SPSR = (1<<SPI2X); // fosc/8
 d26:	81 e0       	ldi	r24, 0x01	; 1
 d28:	8d bd       	out	0x2d, r24	; 45
 d2a:	08 95       	ret

Disassembly of section .text.spi_transfer:

00000d50 <spi_transfer>:
}

uint8_t spi_transfer(uint8_t data) {
	SPDR = data;
 d50:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF)));
 d52:	0d b4       	in	r0, 0x2d	; 45
 d54:	07 fe       	sbrs	r0, 7
 d56:	fd cf       	rjmp	.-6      	; 0xd52 <spi_transfer+0x2>
	return SPDR;
 d58:	8e b5       	in	r24, 0x2e	; 46
}
 d5a:	08 95       	ret

Disassembly of section .text.uart_init:

00000d2c <uart_init>:
}

char uart_receive(void) {
	while (!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
 d2c:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 d30:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 d34:	88 e1       	ldi	r24, 0x18	; 24
 d36:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 d3a:	86 e0       	ldi	r24, 0x06	; 6
 d3c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 d40:	08 95       	ret

Disassembly of section .text.uart_send:

00000d42 <uart_send>:

void uart_send(char c) {
	while (!(UCSR0A & (1<<UDRE0)));
 d42:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 d46:	95 ff       	sbrs	r25, 5
 d48:	fc cf       	rjmp	.-8      	; 0xd42 <uart_send>
	UDR0 = c;
 d4a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 d4e:	08 95       	ret

Disassembly of section .text.uart_print:

00000c3a <uart_print>:
}

char uart_receive(void) {
	while (!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
 c3a:	cf 92       	push	r12
 c3c:	df 92       	push	r13
 c3e:	ef 92       	push	r14
 c40:	6b 01       	movw	r12, r22
 c42:	e8 2e       	mov	r14, r24
 c44:	06 c0       	rjmp	.+12     	; 0xc52 <uart_print+0x18>
 c46:	9f ef       	ldi	r25, 0xFF	; 255
 c48:	c9 1a       	sub	r12, r25
 c4a:	d9 0a       	sbc	r13, r25
 c4c:	e9 0a       	sbc	r14, r25
 c4e:	0e 94 a1 06 	call	0xd42	; 0xd42 <uart_send>
 c52:	f6 01       	movw	r30, r12
 c54:	84 91       	lpm	r24, Z
 c56:	e7 fc       	sbrc	r14, 7
 c58:	80 81       	ld	r24, Z
 c5a:	81 11       	cpse	r24, r1
 c5c:	f4 cf       	rjmp	.-24     	; 0xc46 <uart_print+0xc>
 c5e:	ef 90       	pop	r14
 c60:	df 90       	pop	r13
 c62:	cf 90       	pop	r12
 c64:	08 95       	ret

Disassembly of section .text.uart_print_hex:

00000a7a <uart_print_hex>:
 a7a:	0f 93       	push	r16
 a7c:	1f 93       	push	r17
 a7e:	cf 93       	push	r28
 a80:	df 93       	push	r29
 a82:	00 d0       	rcall	.+0      	; 0xa84 <uart_print_hex+0xa>
 a84:	00 d0       	rcall	.+0      	; 0xa86 <uart_print_hex+0xc>
 a86:	00 d0       	rcall	.+0      	; 0xa88 <uart_print_hex+0xe>
 a88:	cd b7       	in	r28, 0x3d	; 61
 a8a:	de b7       	in	r29, 0x3e	; 62
 a8c:	1f 92       	push	r1
 a8e:	8f 93       	push	r24
 a90:	8c ea       	ldi	r24, 0xAC	; 172
 a92:	92 e0       	ldi	r25, 0x02	; 2
 a94:	a0 e0       	ldi	r26, 0x00	; 0
 a96:	af 93       	push	r26
 a98:	9f 93       	push	r25
 a9a:	8f 93       	push	r24
 a9c:	8e 01       	movw	r16, r28
 a9e:	0f 5f       	subi	r16, 0xFF	; 255
 aa0:	1f 4f       	sbci	r17, 0xFF	; 255
 aa2:	1f 93       	push	r17
 aa4:	0f 93       	push	r16
 aa6:	0e 94 8f 05 	call	0xb1e	; 0xb1e <sprintf>
 aaa:	b8 01       	movw	r22, r16
 aac:	80 e8       	ldi	r24, 0x80	; 128
 aae:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 ab2:	0f b6       	in	r0, 0x3f	; 63
 ab4:	f8 94       	cli
 ab6:	de bf       	out	0x3e, r29	; 62
 ab8:	0f be       	out	0x3f, r0	; 63
 aba:	cd bf       	out	0x3d, r28	; 61
 abc:	26 96       	adiw	r28, 0x06	; 6
 abe:	0f b6       	in	r0, 0x3f	; 63
 ac0:	f8 94       	cli
 ac2:	de bf       	out	0x3e, r29	; 62
 ac4:	0f be       	out	0x3f, r0	; 63
 ac6:	cd bf       	out	0x3d, r28	; 61
 ac8:	df 91       	pop	r29
 aca:	cf 91       	pop	r28
 acc:	1f 91       	pop	r17
 ace:	0f 91       	pop	r16
 ad0:	08 95       	ret

Disassembly of section .text.uart_print_hex_array:

00000ad2 <uart_print_hex_array>:
 ad2:	cf 92       	push	r12
 ad4:	df 92       	push	r13
 ad6:	ef 92       	push	r14
 ad8:	cf 93       	push	r28
 ada:	df 93       	push	r29
 adc:	6b 01       	movw	r12, r22
 ade:	e8 2e       	mov	r14, r24
 ae0:	d4 2f       	mov	r29, r20
 ae2:	c0 e0       	ldi	r28, 0x00	; 0
 ae4:	0f c0       	rjmp	.+30     	; 0xb04 <uart_print_hex_array+0x32>
 ae6:	ae 2d       	mov	r26, r14
 ae8:	c6 01       	movw	r24, r12
 aea:	8c 0f       	add	r24, r28
 aec:	91 1d       	adc	r25, r1
 aee:	a1 1d       	adc	r26, r1
 af0:	fc 01       	movw	r30, r24
 af2:	84 91       	lpm	r24, Z
 af4:	a7 fd       	sbrc	r26, 7
 af6:	80 81       	ld	r24, Z
 af8:	0e 94 3d 05 	call	0xa7a	; 0xa7a <uart_print_hex>
 afc:	80 e2       	ldi	r24, 0x20	; 32
 afe:	0e 94 a1 06 	call	0xd42	; 0xd42 <uart_send>
 b02:	cf 5f       	subi	r28, 0xFF	; 255
 b04:	cd 17       	cp	r28, r29
 b06:	78 f3       	brcs	.-34     	; 0xae6 <uart_print_hex_array+0x14>
 b08:	63 eb       	ldi	r22, 0xB3	; 179
 b0a:	72 e0       	ldi	r23, 0x02	; 2
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	0e 94 1d 06 	call	0xc3a	; 0xc3a <uart_print>
 b12:	df 91       	pop	r29
 b14:	cf 91       	pop	r28
 b16:	ef 90       	pop	r14
 b18:	df 90       	pop	r13
 b1a:	cf 90       	pop	r12
 b1c:	08 95       	ret

Disassembly of section .text.avrlibc:

00000b1e <sprintf>:
 b1e:	af e0       	ldi	r26, 0x0F	; 15
 b20:	b0 e0       	ldi	r27, 0x00	; 0
 b22:	e5 e9       	ldi	r30, 0x95	; 149
 b24:	f5 e0       	ldi	r31, 0x05	; 5
 b26:	0c 94 c0 05 	jmp	0xb80	; 0xb80 <__prologue_saves__+0x1c>
 b2a:	0e 89       	ldd	r16, Y+22	; 0x16
 b2c:	1f 89       	ldd	r17, Y+23	; 0x17
 b2e:	86 e0       	ldi	r24, 0x06	; 6
 b30:	8d 83       	std	Y+5, r24	; 0x05
 b32:	1a 83       	std	Y+2, r17	; 0x02
 b34:	09 83       	std	Y+1, r16	; 0x01
 b36:	8f ef       	ldi	r24, 0xFF	; 255
 b38:	9f e7       	ldi	r25, 0x7F	; 127
 b3a:	9f 83       	std	Y+7, r25	; 0x07
 b3c:	8e 83       	std	Y+6, r24	; 0x06
 b3e:	9e 01       	movw	r18, r28
 b40:	25 5e       	subi	r18, 0xE5	; 229
 b42:	3f 4f       	sbci	r19, 0xFF	; 255
 b44:	48 8d       	ldd	r20, Y+24	; 0x18
 b46:	59 8d       	ldd	r21, Y+25	; 0x19
 b48:	6a 8d       	ldd	r22, Y+26	; 0x1a
 b4a:	ce 01       	movw	r24, r28
 b4c:	01 96       	adiw	r24, 0x01	; 1
 b4e:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <vfprintf>
 b52:	e8 85       	ldd	r30, Y+8	; 0x08
 b54:	f9 85       	ldd	r31, Y+9	; 0x09
 b56:	e0 0f       	add	r30, r16
 b58:	f1 1f       	adc	r31, r17
 b5a:	10 82       	st	Z, r1
 b5c:	2f 96       	adiw	r28, 0x0f	; 15
 b5e:	e4 e0       	ldi	r30, 0x04	; 4
 b60:	0c 94 f7 05 	jmp	0xbee	; 0xbee <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

000002b6 <vfprintf>:
 2b6:	2f 92       	push	r2
 2b8:	3f 92       	push	r3
 2ba:	4f 92       	push	r4
 2bc:	6f 92       	push	r6
 2be:	7f 92       	push	r7
 2c0:	8f 92       	push	r8
 2c2:	9f 92       	push	r9
 2c4:	af 92       	push	r10
 2c6:	bf 92       	push	r11
 2c8:	cf 92       	push	r12
 2ca:	df 92       	push	r13
 2cc:	ef 92       	push	r14
 2ce:	ff 92       	push	r15
 2d0:	0f 93       	push	r16
 2d2:	1f 93       	push	r17
 2d4:	cf 93       	push	r28
 2d6:	df 93       	push	r29
 2d8:	cd b7       	in	r28, 0x3d	; 61
 2da:	de b7       	in	r29, 0x3e	; 62
 2dc:	62 97       	sbiw	r28, 0x12	; 18
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	f8 94       	cli
 2e2:	de bf       	out	0x3e, r29	; 62
 2e4:	0f be       	out	0x3f, r0	; 63
 2e6:	cd bf       	out	0x3d, r28	; 61
 2e8:	6c 01       	movw	r12, r24
 2ea:	3a 01       	movw	r6, r20
 2ec:	86 2e       	mov	r8, r22
 2ee:	79 01       	movw	r14, r18
 2f0:	fc 01       	movw	r30, r24
 2f2:	10 86       	std	Z+8, r1	; 0x08
 2f4:	17 82       	std	Z+7, r1	; 0x07
 2f6:	84 81       	ldd	r24, Z+4	; 0x04
 2f8:	81 ff       	sbrs	r24, 1
 2fa:	e7 c1       	rjmp	.+974    	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 2fc:	9e 01       	movw	r18, r28
 2fe:	2f 5f       	subi	r18, 0xFF	; 255
 300:	3f 4f       	sbci	r19, 0xFF	; 255
 302:	3d 87       	std	Y+13, r19	; 0x0d
 304:	2c 87       	std	Y+12, r18	; 0x0c
 306:	c9 01       	movw	r24, r18
 308:	a0 e8       	ldi	r26, 0x80	; 128
 30a:	88 8b       	std	Y+16, r24	; 0x10
 30c:	99 8b       	std	Y+17, r25	; 0x11
 30e:	aa 8b       	std	Y+18, r26	; 0x12
 310:	9f e3       	ldi	r25, 0x3F	; 63
 312:	99 2e       	mov	r9, r25
 314:	f3 01       	movw	r30, r6
 316:	84 91       	lpm	r24, Z
 318:	87 fc       	sbrc	r8, 7
 31a:	80 81       	ld	r24, Z
 31c:	88 23       	and	r24, r24
 31e:	09 f4       	brne	.+2      	; 0x322 <vfprintf+0x6c>
 320:	d0 c1       	rjmp	.+928    	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 322:	48 2d       	mov	r20, r8
 324:	93 01       	movw	r18, r6
 326:	2f 5f       	subi	r18, 0xFF	; 255
 328:	3f 4f       	sbci	r19, 0xFF	; 255
 32a:	4f 4f       	sbci	r20, 0xFF	; 255
 32c:	85 32       	cpi	r24, 0x25	; 37
 32e:	19 f0       	breq	.+6      	; 0x336 <vfprintf+0x80>
 330:	39 01       	movw	r6, r18
 332:	84 2e       	mov	r8, r20
 334:	0a c0       	rjmp	.+20     	; 0x34a <vfprintf+0x94>
 336:	f9 01       	movw	r30, r18
 338:	84 91       	lpm	r24, Z
 33a:	47 fd       	sbrc	r20, 7
 33c:	80 81       	ld	r24, Z
 33e:	92 e0       	ldi	r25, 0x02	; 2
 340:	69 0e       	add	r6, r25
 342:	71 1c       	adc	r7, r1
 344:	81 1c       	adc	r8, r1
 346:	85 32       	cpi	r24, 0x25	; 37
 348:	29 f4       	brne	.+10     	; 0x354 <vfprintf+0x9e>
 34a:	b6 01       	movw	r22, r12
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 352:	e0 cf       	rjmp	.-64     	; 0x314 <vfprintf+0x5e>
 354:	b1 2c       	mov	r11, r1
 356:	00 e0       	ldi	r16, 0x00	; 0
 358:	10 e0       	ldi	r17, 0x00	; 0
 35a:	10 32       	cpi	r17, 0x20	; 32
 35c:	a0 f4       	brcc	.+40     	; 0x386 <vfprintf+0xd0>
 35e:	8b 32       	cpi	r24, 0x2B	; 43
 360:	69 f0       	breq	.+26     	; 0x37c <vfprintf+0xc6>
 362:	30 f4       	brcc	.+12     	; 0x370 <vfprintf+0xba>
 364:	80 32       	cpi	r24, 0x20	; 32
 366:	59 f0       	breq	.+22     	; 0x37e <vfprintf+0xc8>
 368:	83 32       	cpi	r24, 0x23	; 35
 36a:	69 f4       	brne	.+26     	; 0x386 <vfprintf+0xd0>
 36c:	10 61       	ori	r17, 0x10	; 16
 36e:	2c c0       	rjmp	.+88     	; 0x3c8 <vfprintf+0x112>
 370:	8d 32       	cpi	r24, 0x2D	; 45
 372:	39 f0       	breq	.+14     	; 0x382 <vfprintf+0xcc>
 374:	80 33       	cpi	r24, 0x30	; 48
 376:	39 f4       	brne	.+14     	; 0x386 <vfprintf+0xd0>
 378:	11 60       	ori	r17, 0x01	; 1
 37a:	26 c0       	rjmp	.+76     	; 0x3c8 <vfprintf+0x112>
 37c:	12 60       	ori	r17, 0x02	; 2
 37e:	14 60       	ori	r17, 0x04	; 4
 380:	23 c0       	rjmp	.+70     	; 0x3c8 <vfprintf+0x112>
 382:	18 60       	ori	r17, 0x08	; 8
 384:	21 c0       	rjmp	.+66     	; 0x3c8 <vfprintf+0x112>
 386:	17 fd       	sbrc	r17, 7
 388:	29 c0       	rjmp	.+82     	; 0x3dc <vfprintf+0x126>
 38a:	90 ed       	ldi	r25, 0xD0	; 208
 38c:	98 0f       	add	r25, r24
 38e:	9a 30       	cpi	r25, 0x0A	; 10
 390:	78 f4       	brcc	.+30     	; 0x3b0 <vfprintf+0xfa>
 392:	16 ff       	sbrs	r17, 6
 394:	06 c0       	rjmp	.+12     	; 0x3a2 <vfprintf+0xec>
 396:	aa e0       	ldi	r26, 0x0A	; 10
 398:	ba 9e       	mul	r11, r26
 39a:	90 0d       	add	r25, r0
 39c:	11 24       	eor	r1, r1
 39e:	b9 2e       	mov	r11, r25
 3a0:	13 c0       	rjmp	.+38     	; 0x3c8 <vfprintf+0x112>
 3a2:	ea e0       	ldi	r30, 0x0A	; 10
 3a4:	0e 9f       	mul	r16, r30
 3a6:	90 0d       	add	r25, r0
 3a8:	11 24       	eor	r1, r1
 3aa:	09 2f       	mov	r16, r25
 3ac:	10 62       	ori	r17, 0x20	; 32
 3ae:	0c c0       	rjmp	.+24     	; 0x3c8 <vfprintf+0x112>
 3b0:	8e 32       	cpi	r24, 0x2E	; 46
 3b2:	21 f4       	brne	.+8      	; 0x3bc <vfprintf+0x106>
 3b4:	16 fd       	sbrc	r17, 6
 3b6:	85 c1       	rjmp	.+778    	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 3b8:	10 64       	ori	r17, 0x40	; 64
 3ba:	06 c0       	rjmp	.+12     	; 0x3c8 <vfprintf+0x112>
 3bc:	8c 36       	cpi	r24, 0x6C	; 108
 3be:	11 f4       	brne	.+4      	; 0x3c4 <vfprintf+0x10e>
 3c0:	10 68       	ori	r17, 0x80	; 128
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <vfprintf+0x112>
 3c4:	88 36       	cpi	r24, 0x68	; 104
 3c6:	51 f4       	brne	.+20     	; 0x3dc <vfprintf+0x126>
 3c8:	f3 01       	movw	r30, r6
 3ca:	84 91       	lpm	r24, Z
 3cc:	87 fc       	sbrc	r8, 7
 3ce:	80 81       	ld	r24, Z
 3d0:	ff ef       	ldi	r31, 0xFF	; 255
 3d2:	6f 1a       	sub	r6, r31
 3d4:	7f 0a       	sbc	r7, r31
 3d6:	8f 0a       	sbc	r8, r31
 3d8:	81 11       	cpse	r24, r1
 3da:	bf cf       	rjmp	.-130    	; 0x35a <vfprintf+0xa4>
 3dc:	98 2f       	mov	r25, r24
 3de:	9f 7d       	andi	r25, 0xDF	; 223
 3e0:	95 54       	subi	r25, 0x45	; 69
 3e2:	93 30       	cpi	r25, 0x03	; 3
 3e4:	28 f4       	brcc	.+10     	; 0x3f0 <vfprintf+0x13a>
 3e6:	24 e0       	ldi	r18, 0x04	; 4
 3e8:	e2 0e       	add	r14, r18
 3ea:	f1 1c       	adc	r15, r1
 3ec:	99 82       	std	Y+1, r9	; 0x01
 3ee:	0f c0       	rjmp	.+30     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 3f0:	83 36       	cpi	r24, 0x63	; 99
 3f2:	31 f0       	breq	.+12     	; 0x400 <__EEPROM_REGION_LENGTH__>
 3f4:	83 37       	cpi	r24, 0x73	; 115
 3f6:	91 f0       	breq	.+36     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3f8:	83 35       	cpi	r24, 0x53	; 83
 3fa:	09 f0       	breq	.+2      	; 0x3fe <vfprintf+0x148>
 3fc:	63 c0       	rjmp	.+198    	; 0x4c4 <__EEPROM_REGION_LENGTH__+0xc4>
 3fe:	27 c0       	rjmp	.+78     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 400:	f7 01       	movw	r30, r14
 402:	80 81       	ld	r24, Z
 404:	89 83       	std	Y+1, r24	; 0x01
 406:	97 01       	movw	r18, r14
 408:	2e 5f       	subi	r18, 0xFE	; 254
 40a:	3f 4f       	sbci	r19, 0xFF	; 255
 40c:	79 01       	movw	r14, r18
 40e:	28 88       	ldd	r2, Y+16	; 0x10
 410:	39 88       	ldd	r3, Y+17	; 0x11
 412:	4a 88       	ldd	r4, Y+18	; 0x12
 414:	aa 24       	eor	r10, r10
 416:	a3 94       	inc	r10
 418:	b1 2c       	mov	r11, r1
 41a:	17 c0       	rjmp	.+46     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 41c:	a7 01       	movw	r20, r14
 41e:	4d 5f       	subi	r20, 0xFD	; 253
 420:	5f 4f       	sbci	r21, 0xFF	; 255
 422:	5f 87       	std	Y+15, r21	; 0x0f
 424:	4e 87       	std	Y+14, r20	; 0x0e
 426:	f7 01       	movw	r30, r14
 428:	20 80       	ld	r2, Z
 42a:	31 80       	ldd	r3, Z+1	; 0x01
 42c:	42 80       	ldd	r4, Z+2	; 0x02
 42e:	16 ff       	sbrs	r17, 6
 430:	03 c0       	rjmp	.+6      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 432:	4b 2d       	mov	r20, r11
 434:	50 e0       	ldi	r21, 0x00	; 0
 436:	02 c0       	rjmp	.+4      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 438:	4f ef       	ldi	r20, 0xFF	; 255
 43a:	5f ef       	ldi	r21, 0xFF	; 255
 43c:	84 2d       	mov	r24, r4
 43e:	b1 01       	movw	r22, r2
 440:	0e 94 ce 05 	call	0xb9c	; 0xb9c <strnlen>
 444:	5c 01       	movw	r10, r24
 446:	ee 84       	ldd	r14, Y+14	; 0x0e
 448:	ff 84       	ldd	r15, Y+15	; 0x0f
 44a:	1f 77       	andi	r17, 0x7F	; 127
 44c:	18 c0       	rjmp	.+48     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 44e:	97 01       	movw	r18, r14
 450:	2d 5f       	subi	r18, 0xFD	; 253
 452:	3f 4f       	sbci	r19, 0xFF	; 255
 454:	3f 87       	std	Y+15, r19	; 0x0f
 456:	2e 87       	std	Y+14, r18	; 0x0e
 458:	f7 01       	movw	r30, r14
 45a:	20 80       	ld	r2, Z
 45c:	31 80       	ldd	r3, Z+1	; 0x01
 45e:	42 80       	ldd	r4, Z+2	; 0x02
 460:	16 ff       	sbrs	r17, 6
 462:	03 c0       	rjmp	.+6      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 464:	4b 2d       	mov	r20, r11
 466:	50 e0       	ldi	r21, 0x00	; 0
 468:	02 c0       	rjmp	.+4      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 46a:	4f ef       	ldi	r20, 0xFF	; 255
 46c:	5f ef       	ldi	r21, 0xFF	; 255
 46e:	84 2d       	mov	r24, r4
 470:	b1 01       	movw	r22, r2
 472:	0e 94 ce 05 	call	0xb9c	; 0xb9c <strnlen>
 476:	5c 01       	movw	r10, r24
 478:	10 68       	ori	r17, 0x80	; 128
 47a:	ee 84       	ldd	r14, Y+14	; 0x0e
 47c:	ff 84       	ldd	r15, Y+15	; 0x0f
 47e:	13 fd       	sbrc	r17, 3
 480:	1d c0       	rjmp	.+58     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 482:	80 2f       	mov	r24, r16
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	a8 16       	cp	r10, r24
 488:	b9 06       	cpc	r11, r25
 48a:	c0 f4       	brcc	.+48     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 48c:	b6 01       	movw	r22, r12
 48e:	80 e2       	ldi	r24, 0x20	; 32
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 496:	01 50       	subi	r16, 0x01	; 1
 498:	f4 cf       	rjmp	.-24     	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
 49a:	f1 01       	movw	r30, r2
 49c:	84 91       	lpm	r24, Z
 49e:	47 fc       	sbrc	r4, 7
 4a0:	80 81       	ld	r24, Z
 4a2:	ff ef       	ldi	r31, 0xFF	; 255
 4a4:	2f 1a       	sub	r2, r31
 4a6:	3f 0a       	sbc	r3, r31
 4a8:	4f 0a       	sbc	r4, r31
 4aa:	b6 01       	movw	r22, r12
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 4b2:	01 11       	cpse	r16, r1
 4b4:	01 50       	subi	r16, 0x01	; 1
 4b6:	21 e0       	ldi	r18, 0x01	; 1
 4b8:	a2 1a       	sub	r10, r18
 4ba:	b1 08       	sbc	r11, r1
 4bc:	a1 14       	cp	r10, r1
 4be:	b1 04       	cpc	r11, r1
 4c0:	61 f7       	brne	.-40     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 4c2:	f5 c0       	rjmp	.+490    	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 4c4:	84 36       	cpi	r24, 0x64	; 100
 4c6:	11 f0       	breq	.+4      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4c8:	89 36       	cpi	r24, 0x69	; 105
 4ca:	71 f5       	brne	.+92     	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 4cc:	f7 01       	movw	r30, r14
 4ce:	17 ff       	sbrs	r17, 7
 4d0:	08 c0       	rjmp	.+16     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 4d2:	60 81       	ld	r22, Z
 4d4:	71 81       	ldd	r23, Z+1	; 0x01
 4d6:	82 81       	ldd	r24, Z+2	; 0x02
 4d8:	93 81       	ldd	r25, Z+3	; 0x03
 4da:	97 01       	movw	r18, r14
 4dc:	2c 5f       	subi	r18, 0xFC	; 252
 4de:	3f 4f       	sbci	r19, 0xFF	; 255
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4e2:	60 81       	ld	r22, Z
 4e4:	71 81       	ldd	r23, Z+1	; 0x01
 4e6:	07 2e       	mov	r0, r23
 4e8:	00 0c       	add	r0, r0
 4ea:	88 0b       	sbc	r24, r24
 4ec:	99 0b       	sbc	r25, r25
 4ee:	97 01       	movw	r18, r14
 4f0:	2e 5f       	subi	r18, 0xFE	; 254
 4f2:	3f 4f       	sbci	r19, 0xFF	; 255
 4f4:	79 01       	movw	r14, r18
 4f6:	1f 76       	andi	r17, 0x6F	; 111
 4f8:	31 2e       	mov	r3, r17
 4fa:	97 ff       	sbrs	r25, 7
 4fc:	0a c0       	rjmp	.+20     	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
 4fe:	90 95       	com	r25
 500:	80 95       	com	r24
 502:	70 95       	com	r23
 504:	61 95       	neg	r22
 506:	7f 4f       	sbci	r23, 0xFF	; 255
 508:	8f 4f       	sbci	r24, 0xFF	; 255
 50a:	9f 4f       	sbci	r25, 0xFF	; 255
 50c:	31 2f       	mov	r19, r17
 50e:	30 68       	ori	r19, 0x80	; 128
 510:	33 2e       	mov	r3, r19
 512:	2a e0       	ldi	r18, 0x0A	; 10
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	ae 01       	movw	r20, r28
 518:	4f 5f       	subi	r20, 0xFF	; 255
 51a:	5f 4f       	sbci	r21, 0xFF	; 255
 51c:	0e 94 26 04 	call	0x84c	; 0x84c <__ultoa_invert>
 520:	48 2e       	mov	r4, r24
 522:	4c 85       	ldd	r20, Y+12	; 0x0c
 524:	44 1a       	sub	r4, r20
 526:	4a c0       	rjmp	.+148    	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
 528:	85 37       	cpi	r24, 0x75	; 117
 52a:	29 f4       	brne	.+10     	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
 52c:	1f 7e       	andi	r17, 0xEF	; 239
 52e:	a1 2e       	mov	r10, r17
 530:	2a e0       	ldi	r18, 0x0A	; 10
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	25 c0       	rjmp	.+74     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 536:	51 2f       	mov	r21, r17
 538:	59 7f       	andi	r21, 0xF9	; 249
 53a:	a5 2e       	mov	r10, r21
 53c:	8f 36       	cpi	r24, 0x6F	; 111
 53e:	c1 f0       	breq	.+48     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 540:	18 f4       	brcc	.+6      	; 0x548 <__EEPROM_REGION_LENGTH__+0x148>
 542:	88 35       	cpi	r24, 0x58	; 88
 544:	79 f0       	breq	.+30     	; 0x564 <__EEPROM_REGION_LENGTH__+0x164>
 546:	bd c0       	rjmp	.+378    	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 548:	80 37       	cpi	r24, 0x70	; 112
 54a:	19 f0       	breq	.+6      	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
 54c:	88 37       	cpi	r24, 0x78	; 120
 54e:	21 f0       	breq	.+8      	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
 550:	b8 c0       	rjmp	.+368    	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 552:	85 2f       	mov	r24, r21
 554:	80 61       	ori	r24, 0x10	; 16
 556:	a8 2e       	mov	r10, r24
 558:	a4 fe       	sbrs	r10, 4
 55a:	0d c0       	rjmp	.+26     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 55c:	9a 2d       	mov	r25, r10
 55e:	94 60       	ori	r25, 0x04	; 4
 560:	a9 2e       	mov	r10, r25
 562:	09 c0       	rjmp	.+18     	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 564:	14 ff       	sbrs	r17, 4
 566:	0a c0       	rjmp	.+20     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 568:	a5 2f       	mov	r26, r21
 56a:	a6 60       	ori	r26, 0x06	; 6
 56c:	aa 2e       	mov	r10, r26
 56e:	06 c0       	rjmp	.+12     	; 0x57c <__EEPROM_REGION_LENGTH__+0x17c>
 570:	28 e0       	ldi	r18, 0x08	; 8
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	05 c0       	rjmp	.+10     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 576:	20 e1       	ldi	r18, 0x10	; 16
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	02 c0       	rjmp	.+4      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 57c:	20 e1       	ldi	r18, 0x10	; 16
 57e:	32 e0       	ldi	r19, 0x02	; 2
 580:	f7 01       	movw	r30, r14
 582:	a7 fe       	sbrs	r10, 7
 584:	08 c0       	rjmp	.+16     	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
 586:	60 81       	ld	r22, Z
 588:	71 81       	ldd	r23, Z+1	; 0x01
 58a:	82 81       	ldd	r24, Z+2	; 0x02
 58c:	93 81       	ldd	r25, Z+3	; 0x03
 58e:	a7 01       	movw	r20, r14
 590:	4c 5f       	subi	r20, 0xFC	; 252
 592:	5f 4f       	sbci	r21, 0xFF	; 255
 594:	07 c0       	rjmp	.+14     	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 596:	60 81       	ld	r22, Z
 598:	71 81       	ldd	r23, Z+1	; 0x01
 59a:	80 e0       	ldi	r24, 0x00	; 0
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	a7 01       	movw	r20, r14
 5a0:	4e 5f       	subi	r20, 0xFE	; 254
 5a2:	5f 4f       	sbci	r21, 0xFF	; 255
 5a4:	7a 01       	movw	r14, r20
 5a6:	ae 01       	movw	r20, r28
 5a8:	4f 5f       	subi	r20, 0xFF	; 255
 5aa:	5f 4f       	sbci	r21, 0xFF	; 255
 5ac:	0e 94 26 04 	call	0x84c	; 0x84c <__ultoa_invert>
 5b0:	48 2e       	mov	r4, r24
 5b2:	5c 85       	ldd	r21, Y+12	; 0x0c
 5b4:	45 1a       	sub	r4, r21
 5b6:	8a 2d       	mov	r24, r10
 5b8:	8f 77       	andi	r24, 0x7F	; 127
 5ba:	38 2e       	mov	r3, r24
 5bc:	36 fe       	sbrs	r3, 6
 5be:	0d c0       	rjmp	.+26     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5c0:	93 2d       	mov	r25, r3
 5c2:	9e 7f       	andi	r25, 0xFE	; 254
 5c4:	a9 2e       	mov	r10, r25
 5c6:	4b 14       	cp	r4, r11
 5c8:	58 f4       	brcc	.+22     	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5ca:	34 fe       	sbrs	r3, 4
 5cc:	0b c0       	rjmp	.+22     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5ce:	32 fc       	sbrc	r3, 2
 5d0:	09 c0       	rjmp	.+18     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5d2:	a3 2d       	mov	r26, r3
 5d4:	ae 7e       	andi	r26, 0xEE	; 238
 5d6:	aa 2e       	mov	r10, r26
 5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
 5da:	14 2d       	mov	r17, r4
 5dc:	a3 2c       	mov	r10, r3
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5e0:	14 2d       	mov	r17, r4
 5e2:	01 c0       	rjmp	.+2      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5e4:	1b 2d       	mov	r17, r11
 5e6:	a4 fe       	sbrs	r10, 4
 5e8:	0e c0       	rjmp	.+28     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5ea:	fe 01       	movw	r30, r28
 5ec:	e4 0d       	add	r30, r4
 5ee:	f1 1d       	adc	r31, r1
 5f0:	80 81       	ld	r24, Z
 5f2:	80 33       	cpi	r24, 0x30	; 48
 5f4:	21 f4       	brne	.+8      	; 0x5fe <__EEPROM_REGION_LENGTH__+0x1fe>
 5f6:	ea 2d       	mov	r30, r10
 5f8:	e9 7e       	andi	r30, 0xE9	; 233
 5fa:	ae 2e       	mov	r10, r30
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5fe:	a2 fe       	sbrs	r10, 2
 600:	05 c0       	rjmp	.+10     	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
 602:	1e 5f       	subi	r17, 0xFE	; 254
 604:	04 c0       	rjmp	.+8      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 606:	8a 2d       	mov	r24, r10
 608:	86 78       	andi	r24, 0x86	; 134
 60a:	09 f0       	breq	.+2      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 60c:	1f 5f       	subi	r17, 0xFF	; 255
 60e:	a3 fc       	sbrc	r10, 3
 610:	11 c0       	rjmp	.+34     	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
 612:	a0 fe       	sbrs	r10, 0
 614:	06 c0       	rjmp	.+12     	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 616:	10 17       	cp	r17, r16
 618:	88 f4       	brcc	.+34     	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 61a:	04 0d       	add	r16, r4
 61c:	b0 2e       	mov	r11, r16
 61e:	b1 1a       	sub	r11, r17
 620:	0e c0       	rjmp	.+28     	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 622:	10 17       	cp	r17, r16
 624:	60 f4       	brcc	.+24     	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 626:	b6 01       	movw	r22, r12
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 630:	1f 5f       	subi	r17, 0xFF	; 255
 632:	f7 cf       	rjmp	.-18     	; 0x622 <__EEPROM_REGION_LENGTH__+0x222>
 634:	10 17       	cp	r17, r16
 636:	18 f4       	brcc	.+6      	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 638:	01 1b       	sub	r16, r17
 63a:	02 c0       	rjmp	.+4      	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
 63c:	b4 2c       	mov	r11, r4
 63e:	00 e0       	ldi	r16, 0x00	; 0
 640:	a4 fe       	sbrs	r10, 4
 642:	10 c0       	rjmp	.+32     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 644:	b6 01       	movw	r22, r12
 646:	80 e3       	ldi	r24, 0x30	; 48
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 64e:	a2 fe       	sbrs	r10, 2
 650:	17 c0       	rjmp	.+46     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 652:	a1 fc       	sbrc	r10, 1
 654:	03 c0       	rjmp	.+6      	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
 656:	88 e7       	ldi	r24, 0x78	; 120
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	02 c0       	rjmp	.+4      	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
 65c:	88 e5       	ldi	r24, 0x58	; 88
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	b6 01       	movw	r22, r12
 662:	0c c0       	rjmp	.+24     	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 664:	8a 2d       	mov	r24, r10
 666:	86 78       	andi	r24, 0x86	; 134
 668:	59 f0       	breq	.+22     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 66a:	a1 fe       	sbrs	r10, 1
 66c:	02 c0       	rjmp	.+4      	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
 66e:	8b e2       	ldi	r24, 0x2B	; 43
 670:	01 c0       	rjmp	.+2      	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
 672:	80 e2       	ldi	r24, 0x20	; 32
 674:	a7 fc       	sbrc	r10, 7
 676:	8d e2       	ldi	r24, 0x2D	; 45
 678:	b6 01       	movw	r22, r12
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 680:	4b 14       	cp	r4, r11
 682:	38 f4       	brcc	.+14     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 684:	b6 01       	movw	r22, r12
 686:	80 e3       	ldi	r24, 0x30	; 48
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 68e:	ba 94       	dec	r11
 690:	f7 cf       	rjmp	.-18     	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 692:	4a 94       	dec	r4
 694:	e1 e0       	ldi	r30, 0x01	; 1
 696:	f0 e0       	ldi	r31, 0x00	; 0
 698:	ec 0f       	add	r30, r28
 69a:	fd 1f       	adc	r31, r29
 69c:	e4 0d       	add	r30, r4
 69e:	f1 1d       	adc	r31, r1
 6a0:	80 81       	ld	r24, Z
 6a2:	b6 01       	movw	r22, r12
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 6aa:	41 10       	cpse	r4, r1
 6ac:	f2 cf       	rjmp	.-28     	; 0x692 <__EEPROM_REGION_LENGTH__+0x292>
 6ae:	00 23       	and	r16, r16
 6b0:	09 f4       	brne	.+2      	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
 6b2:	30 ce       	rjmp	.-928    	; 0x314 <vfprintf+0x5e>
 6b4:	b6 01       	movw	r22, r12
 6b6:	80 e2       	ldi	r24, 0x20	; 32
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 6be:	01 50       	subi	r16, 0x01	; 1
 6c0:	f6 cf       	rjmp	.-20     	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 6c2:	f6 01       	movw	r30, r12
 6c4:	87 81       	ldd	r24, Z+7	; 0x07
 6c6:	90 85       	ldd	r25, Z+8	; 0x08
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	9f ef       	ldi	r25, 0xFF	; 255
 6ce:	62 96       	adiw	r28, 0x12	; 18
 6d0:	0f b6       	in	r0, 0x3f	; 63
 6d2:	f8 94       	cli
 6d4:	de bf       	out	0x3e, r29	; 62
 6d6:	0f be       	out	0x3f, r0	; 63
 6d8:	cd bf       	out	0x3d, r28	; 61
 6da:	df 91       	pop	r29
 6dc:	cf 91       	pop	r28
 6de:	1f 91       	pop	r17
 6e0:	0f 91       	pop	r16
 6e2:	ff 90       	pop	r15
 6e4:	ef 90       	pop	r14
 6e6:	df 90       	pop	r13
 6e8:	cf 90       	pop	r12
 6ea:	bf 90       	pop	r11
 6ec:	af 90       	pop	r10
 6ee:	9f 90       	pop	r9
 6f0:	8f 90       	pop	r8
 6f2:	7f 90       	pop	r7
 6f4:	6f 90       	pop	r6
 6f6:	4f 90       	pop	r4
 6f8:	3f 90       	pop	r3
 6fa:	2f 90       	pop	r2
 6fc:	08 95       	ret

Disassembly of section .text.avrlibc:

00000b9c <strnlen>:
 b9c:	cf 92       	push	r12
 b9e:	df 92       	push	r13
 ba0:	ef 92       	push	r14
 ba2:	6b 01       	movw	r12, r22
 ba4:	e8 2e       	mov	r14, r24
 ba6:	a8 2f       	mov	r26, r24
 ba8:	cb 01       	movw	r24, r22
 baa:	41 15       	cp	r20, r1
 bac:	51 05       	cpc	r21, r1
 bae:	31 f4       	brne	.+12     	; 0xbbc <strnlen+0x20>
 bb0:	8c 19       	sub	r24, r12
 bb2:	9d 09       	sbc	r25, r13
 bb4:	ef 90       	pop	r14
 bb6:	df 90       	pop	r13
 bb8:	cf 90       	pop	r12
 bba:	08 95       	ret
 bbc:	fc 01       	movw	r30, r24
 bbe:	24 91       	lpm	r18, Z
 bc0:	a7 fd       	sbrc	r26, 7
 bc2:	20 81       	ld	r18, Z
 bc4:	22 23       	and	r18, r18
 bc6:	a1 f3       	breq	.-24     	; 0xbb0 <strnlen+0x14>
 bc8:	01 96       	adiw	r24, 0x01	; 1
 bca:	a1 1d       	adc	r26, r1
 bcc:	41 50       	subi	r20, 0x01	; 1
 bce:	51 09       	sbc	r21, r1
 bd0:	ec cf       	rjmp	.-40     	; 0xbaa <strnlen+0xe>

Disassembly of section .text.avrlibc:

000009a6 <fputc>:
 9a6:	0f 93       	push	r16
 9a8:	1f 93       	push	r17
 9aa:	cf 93       	push	r28
 9ac:	df 93       	push	r29
 9ae:	fb 01       	movw	r30, r22
 9b0:	24 81       	ldd	r18, Z+4	; 0x04
 9b2:	21 fd       	sbrc	r18, 1
 9b4:	03 c0       	rjmp	.+6      	; 0x9bc <fputc+0x16>
 9b6:	8f ef       	ldi	r24, 0xFF	; 255
 9b8:	9f ef       	ldi	r25, 0xFF	; 255
 9ba:	2c c0       	rjmp	.+88     	; 0xa14 <fputc+0x6e>
 9bc:	22 ff       	sbrs	r18, 2
 9be:	16 c0       	rjmp	.+44     	; 0x9ec <fputc+0x46>
 9c0:	47 81       	ldd	r20, Z+7	; 0x07
 9c2:	50 85       	ldd	r21, Z+8	; 0x08
 9c4:	25 81       	ldd	r18, Z+5	; 0x05
 9c6:	36 81       	ldd	r19, Z+6	; 0x06
 9c8:	42 17       	cp	r20, r18
 9ca:	53 07       	cpc	r21, r19
 9cc:	44 f4       	brge	.+16     	; 0x9de <fputc+0x38>
 9ce:	a0 81       	ld	r26, Z
 9d0:	b1 81       	ldd	r27, Z+1	; 0x01
 9d2:	9d 01       	movw	r18, r26
 9d4:	2f 5f       	subi	r18, 0xFF	; 255
 9d6:	3f 4f       	sbci	r19, 0xFF	; 255
 9d8:	31 83       	std	Z+1, r19	; 0x01
 9da:	20 83       	st	Z, r18
 9dc:	8c 93       	st	X, r24
 9de:	27 81       	ldd	r18, Z+7	; 0x07
 9e0:	30 85       	ldd	r19, Z+8	; 0x08
 9e2:	2f 5f       	subi	r18, 0xFF	; 255
 9e4:	3f 4f       	sbci	r19, 0xFF	; 255
 9e6:	30 87       	std	Z+8, r19	; 0x08
 9e8:	27 83       	std	Z+7, r18	; 0x07
 9ea:	14 c0       	rjmp	.+40     	; 0xa14 <fputc+0x6e>
 9ec:	8b 01       	movw	r16, r22
 9ee:	ec 01       	movw	r28, r24
 9f0:	fb 01       	movw	r30, r22
 9f2:	01 84       	ldd	r0, Z+9	; 0x09
 9f4:	f2 85       	ldd	r31, Z+10	; 0x0a
 9f6:	e0 2d       	mov	r30, r0
 9f8:	09 95       	icall
 9fa:	89 2b       	or	r24, r25
 9fc:	e1 f6       	brne	.-72     	; 0x9b6 <fputc+0x10>
 9fe:	d8 01       	movw	r26, r16
 a00:	17 96       	adiw	r26, 0x07	; 7
 a02:	8d 91       	ld	r24, X+
 a04:	9c 91       	ld	r25, X
 a06:	18 97       	sbiw	r26, 0x08	; 8
 a08:	01 96       	adiw	r24, 0x01	; 1
 a0a:	18 96       	adiw	r26, 0x08	; 8
 a0c:	9c 93       	st	X, r25
 a0e:	8e 93       	st	-X, r24
 a10:	17 97       	sbiw	r26, 0x07	; 7
 a12:	ce 01       	movw	r24, r28
 a14:	df 91       	pop	r29
 a16:	cf 91       	pop	r28
 a18:	1f 91       	pop	r17
 a1a:	0f 91       	pop	r16
 a1c:	08 95       	ret

Disassembly of section .text.avrlibc:

0000084c <__ultoa_invert>:
 84c:	fa 01       	movw	r30, r20
 84e:	aa 27       	eor	r26, r26
 850:	28 30       	cpi	r18, 0x08	; 8
 852:	51 f1       	breq	.+84     	; 0x8a8 <__ultoa_invert+0x5c>
 854:	20 31       	cpi	r18, 0x10	; 16
 856:	81 f1       	breq	.+96     	; 0x8b8 <__ultoa_invert+0x6c>
 858:	e8 94       	clt
 85a:	6f 93       	push	r22
 85c:	6e 7f       	andi	r22, 0xFE	; 254
 85e:	6e 5f       	subi	r22, 0xFE	; 254
 860:	7f 4f       	sbci	r23, 0xFF	; 255
 862:	8f 4f       	sbci	r24, 0xFF	; 255
 864:	9f 4f       	sbci	r25, 0xFF	; 255
 866:	af 4f       	sbci	r26, 0xFF	; 255
 868:	b1 e0       	ldi	r27, 0x01	; 1
 86a:	3e d0       	rcall	.+124    	; 0x8e8 <__ultoa_invert+0x9c>
 86c:	b4 e0       	ldi	r27, 0x04	; 4
 86e:	3c d0       	rcall	.+120    	; 0x8e8 <__ultoa_invert+0x9c>
 870:	67 0f       	add	r22, r23
 872:	78 1f       	adc	r23, r24
 874:	89 1f       	adc	r24, r25
 876:	9a 1f       	adc	r25, r26
 878:	a1 1d       	adc	r26, r1
 87a:	68 0f       	add	r22, r24
 87c:	79 1f       	adc	r23, r25
 87e:	8a 1f       	adc	r24, r26
 880:	91 1d       	adc	r25, r1
 882:	a1 1d       	adc	r26, r1
 884:	6a 0f       	add	r22, r26
 886:	71 1d       	adc	r23, r1
 888:	81 1d       	adc	r24, r1
 88a:	91 1d       	adc	r25, r1
 88c:	a1 1d       	adc	r26, r1
 88e:	20 d0       	rcall	.+64     	; 0x8d0 <__ultoa_invert+0x84>
 890:	09 f4       	brne	.+2      	; 0x894 <__ultoa_invert+0x48>
 892:	68 94       	set
 894:	3f 91       	pop	r19
 896:	2a e0       	ldi	r18, 0x0A	; 10
 898:	26 9f       	mul	r18, r22
 89a:	11 24       	eor	r1, r1
 89c:	30 19       	sub	r19, r0
 89e:	30 5d       	subi	r19, 0xD0	; 208
 8a0:	31 93       	st	Z+, r19
 8a2:	de f6       	brtc	.-74     	; 0x85a <__ultoa_invert+0xe>
 8a4:	cf 01       	movw	r24, r30
 8a6:	08 95       	ret
 8a8:	46 2f       	mov	r20, r22
 8aa:	47 70       	andi	r20, 0x07	; 7
 8ac:	40 5d       	subi	r20, 0xD0	; 208
 8ae:	41 93       	st	Z+, r20
 8b0:	b3 e0       	ldi	r27, 0x03	; 3
 8b2:	0f d0       	rcall	.+30     	; 0x8d2 <__ultoa_invert+0x86>
 8b4:	c9 f7       	brne	.-14     	; 0x8a8 <__ultoa_invert+0x5c>
 8b6:	f6 cf       	rjmp	.-20     	; 0x8a4 <__ultoa_invert+0x58>
 8b8:	46 2f       	mov	r20, r22
 8ba:	4f 70       	andi	r20, 0x0F	; 15
 8bc:	40 5d       	subi	r20, 0xD0	; 208
 8be:	4a 33       	cpi	r20, 0x3A	; 58
 8c0:	18 f0       	brcs	.+6      	; 0x8c8 <__ultoa_invert+0x7c>
 8c2:	49 5d       	subi	r20, 0xD9	; 217
 8c4:	31 fd       	sbrc	r19, 1
 8c6:	40 52       	subi	r20, 0x20	; 32
 8c8:	41 93       	st	Z+, r20
 8ca:	02 d0       	rcall	.+4      	; 0x8d0 <__ultoa_invert+0x84>
 8cc:	a9 f7       	brne	.-22     	; 0x8b8 <__ultoa_invert+0x6c>
 8ce:	ea cf       	rjmp	.-44     	; 0x8a4 <__ultoa_invert+0x58>
 8d0:	b4 e0       	ldi	r27, 0x04	; 4
 8d2:	a6 95       	lsr	r26
 8d4:	97 95       	ror	r25
 8d6:	87 95       	ror	r24
 8d8:	77 95       	ror	r23
 8da:	67 95       	ror	r22
 8dc:	ba 95       	dec	r27
 8de:	c9 f7       	brne	.-14     	; 0x8d2 <__ultoa_invert+0x86>
 8e0:	00 97       	sbiw	r24, 0x00	; 0
 8e2:	61 05       	cpc	r22, r1
 8e4:	71 05       	cpc	r23, r1
 8e6:	08 95       	ret
 8e8:	9b 01       	movw	r18, r22
 8ea:	ac 01       	movw	r20, r24
 8ec:	0a 2e       	mov	r0, r26
 8ee:	06 94       	lsr	r0
 8f0:	57 95       	ror	r21
 8f2:	47 95       	ror	r20
 8f4:	37 95       	ror	r19
 8f6:	27 95       	ror	r18
 8f8:	ba 95       	dec	r27
 8fa:	c9 f7       	brne	.-14     	; 0x8ee <__ultoa_invert+0xa2>
 8fc:	62 0f       	add	r22, r18
 8fe:	73 1f       	adc	r23, r19
 900:	84 1f       	adc	r24, r20
 902:	95 1f       	adc	r25, r21
 904:	a0 1d       	adc	r26, r0
 906:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000b64 <__prologue_saves__>:
 b64:	2f 92       	push	r2
 b66:	3f 92       	push	r3
 b68:	4f 92       	push	r4
 b6a:	5f 92       	push	r5
 b6c:	6f 92       	push	r6
 b6e:	7f 92       	push	r7
 b70:	8f 92       	push	r8
 b72:	9f 92       	push	r9
 b74:	af 92       	push	r10
 b76:	bf 92       	push	r11
 b78:	cf 92       	push	r12
 b7a:	df 92       	push	r13
 b7c:	ef 92       	push	r14
 b7e:	ff 92       	push	r15
 b80:	0f 93       	push	r16
 b82:	1f 93       	push	r17
 b84:	cf 93       	push	r28
 b86:	df 93       	push	r29
 b88:	cd b7       	in	r28, 0x3d	; 61
 b8a:	de b7       	in	r29, 0x3e	; 62
 b8c:	ca 1b       	sub	r28, r26
 b8e:	db 0b       	sbc	r29, r27
 b90:	0f b6       	in	r0, 0x3f	; 63
 b92:	f8 94       	cli
 b94:	de bf       	out	0x3e, r29	; 62
 b96:	0f be       	out	0x3f, r0	; 63
 b98:	cd bf       	out	0x3d, r28	; 61
 b9a:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000bd2 <__epilogue_restores__>:
 bd2:	2a 88       	ldd	r2, Y+18	; 0x12
 bd4:	39 88       	ldd	r3, Y+17	; 0x11
 bd6:	48 88       	ldd	r4, Y+16	; 0x10
 bd8:	5f 84       	ldd	r5, Y+15	; 0x0f
 bda:	6e 84       	ldd	r6, Y+14	; 0x0e
 bdc:	7d 84       	ldd	r7, Y+13	; 0x0d
 bde:	8c 84       	ldd	r8, Y+12	; 0x0c
 be0:	9b 84       	ldd	r9, Y+11	; 0x0b
 be2:	aa 84       	ldd	r10, Y+10	; 0x0a
 be4:	b9 84       	ldd	r11, Y+9	; 0x09
 be6:	c8 84       	ldd	r12, Y+8	; 0x08
 be8:	df 80       	ldd	r13, Y+7	; 0x07
 bea:	ee 80       	ldd	r14, Y+6	; 0x06
 bec:	fd 80       	ldd	r15, Y+5	; 0x05
 bee:	0c 81       	ldd	r16, Y+4	; 0x04
 bf0:	1b 81       	ldd	r17, Y+3	; 0x03
 bf2:	aa 81       	ldd	r26, Y+2	; 0x02
 bf4:	b9 81       	ldd	r27, Y+1	; 0x01
 bf6:	ce 0f       	add	r28, r30
 bf8:	d1 1d       	adc	r29, r1
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	de bf       	out	0x3e, r29	; 62
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	cd bf       	out	0x3d, r28	; 61
 c04:	ed 01       	movw	r28, r26
 c06:	08 95       	ret
